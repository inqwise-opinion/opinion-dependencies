name: Release

permissions:
  contents: write

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (required when deploySnapshot is false)"
        required: false
        type: string
      deploySnapshot:
        description: "Deploy current SNAPSHOT build"
        required: false
        default: "false"
        type: choice
        options:
          - "false"
          - "true"

jobs:
  release:
    name: Publish BOM
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Configure Maven (release publishing)
        if: github.event_name == 'release' || github.event.inputs.deploySnapshot != 'true'
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 21
          server-id: sonatype-oss-release
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Configure Maven (snapshot publishing)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploySnapshot == 'true'
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 21
          server-id: sonatype-oss-snapshots
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Configure Git author
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Validate inputs
        if: github.event_name == 'workflow_dispatch'
        run: |
          SNAPSHOT="${{ github.event.inputs.deploySnapshot }}"
          VERSION="${{ github.event.inputs.version }}"
          if [ "$SNAPSHOT" = "true" ]; then
            echo "Deploying SNAPSHOT build"
            exit 0
          fi
          if [ -z "$VERSION" ]; then
            echo "Release version input is required when deploySnapshot is false."
            exit 1
          fi
          echo "Preparing release v$VERSION"

      - name: Verify BOM build
        run: mvn -B -ntp clean install

      - name: Prepare and perform release (manual trigger)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploySnapshot != 'true'
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          set -euo pipefail
          RELEASE="${{ github.event.inputs.version }}"
          NEXT=$((RELEASE + 1))
          git clean -fdx
          mvn -B -ntp release:clean release:prepare release:perform \
            -DreleaseVersion="$RELEASE" \
            -DdevelopmentVersion="${NEXT}-SNAPSHOT" \
            -Dtag="v$RELEASE" \
            -Darguments="-Psonatype-oss-release -DskipTests"

      - name: Push release commits
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploySnapshot != 'true'
        run: git push origin --follow-tags

      - name: Create GitHub release
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploySnapshot != 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Opinion Dependencies v${{ github.event.inputs.version }}
          body: |
            ðŸš€ **Opinion Dependencies v${{ github.event.inputs.version }}**

            Import the BOM to align your module with the Opinion platform stack:

            ```xml
            <dependencyManagement>
              <dependencies>
                <dependency>
                  <groupId>com.inqwise.opinion</groupId>
                  <artifactId>opinion-dependencies</artifactId>
                  <version>${{ github.event.inputs.version }}</version>
                  <type>pom</type>
                  <scope>import</scope>
                </dependency>
              </dependencies>
            </dependencyManagement>
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy SNAPSHOT (manual trigger)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploySnapshot == 'true'
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          set -euo pipefail
          VERSION=$(mvn -q -Dexec.skip=true help:evaluate -Dexpression=project.version -DforceStdout)
          if [[ "$VERSION" != *-SNAPSHOT ]]; then
            echo "Project version '$VERSION' is not a SNAPSHOT. Aborting."
            exit 1
          fi
          git clean -fdx
          mvn -B -ntp clean deploy -DskipTests -Dcentral.skip=true \
            -DaltDeploymentRepository=sonatype-oss-snapshots::default::https://central.sonatype.com/repository/maven-snapshots/

      - name: Deploy to Maven Central (tag-based release)
        if: github.event_name == 'release'
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mvn -B -ntp clean deploy -Psonatype-oss-release -DskipTests
